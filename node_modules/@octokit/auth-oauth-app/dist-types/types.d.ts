import * as OctokitTypes from "@octokit/types";
export declare type AnyResponse = OctokitTypes.OctokitResponse<any>;
export declare type EndpointDefaults = OctokitTypes.EndpointDefaults;
export declare type EndpointOptions = OctokitTypes.EndpointOptions;
export declare type RequestParameters = OctokitTypes.RequestParameters;
export declare type Route = OctokitTypes.Route;
export declare type RequestInterface = OctokitTypes.RequestInterface;
export declare type StrategyInterface = OctokitTypes.StrategyInterface<[
    StrategyOptions
], [
    AuthOptions
], Authentication>;
export declare type StrategyOptions = {
    clientId: string;
    clientSecret: string;
    code?: string;
    redirectUrl?: string;
    state?: string;
    request?: RequestInterface;
};
export declare type AuthAppOptions = {
    type: "oauth-app";
};
export declare type AuthTokenOptions = {
    type: "oauth-user";
    code?: string;
    redirectUrl?: string;
    state?: string;
};
/** @deprecated type: "token" is deprecated. Use type: "oauth-user" */
export declare type DeprecatedAuthTokenOptions = {
    type: "token";
    code?: string;
    redirectUrl?: string;
    state?: string;
};
export declare type AuthOptions = AuthAppOptions | AuthTokenOptions | DeprecatedAuthTokenOptions;
export declare type TokenWithScopes = {
    token: string;
    scopes: string[];
};
export declare type TokenAuthentication = TokenWithScopes & {
    type: "token";
    tokenType: "oauth";
};
export declare type appAuthentication = {
    type: "oauth-app";
    clientId: string;
    clientSecret: string;
    headers: {
        authorization: string;
    };
};
export declare type Authentication = TokenAuthentication | appAuthentication;
export declare type State = StrategyOptions & {
    request: RequestInterface;
    token?: TokenWithScopes;
};
export interface OAuthAppAuthInterface {
    (options?: AuthOptions): Promise<Authentication>;
    hook(request: OctokitTypes.RequestInterface, route: OctokitTypes.Route | OctokitTypes.EndpointOptions, parameters?: OctokitTypes.RequestParameters): Promise<OctokitTypes.OctokitResponse<any>>;
}
